apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "node-js.fullname" . }}
  labels:
    app: {{ template "node-js.name" . }}
    chart: {{ template "node-js.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "node-js.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "node-js.name" . }}
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret}}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          {{- range $name, $secret := .Values.env.secrets }}
            - name: {{ $name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secret.name  }}
                  key: {{ $secret.key }}
          {{- end }}
          {{- range $name, $value := .Values.env.vars }}
            - name: {{ $name  }}
              value: {{ $value | quote  }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheck.path }}
              port: http
            initialDelaySeconds: 180
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheck.path }}
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}